import{f as d,_,r as u,o as l,c as p,b as n,w as m,F as f,a as i}from"./C2egFmNW.js";import{A as N}from"./lEC4QW_W.js";import{u as M}from"./C-QmXMO2.js";import{M as G}from"./DZtMAx33.js";import{_ as x}from"./evITL-mf.js";import{_ as g}from"./lXXSD6iP.js";import"./C4iS2aBk.js";const E={name:"NoiseMusicGain",components:{AudioElement:N,MicrophoneHandler:G},data(){return{audioContext:M().getContext(),playing:!1,paused:!1,createdNodes:{},forest_src:window.location.origin+d().public.forest_src,noise_src:window.location.origin+d().public.noise_src}},methods:{setupMicrophone(e){this.createdNodes.microphone=this.audioContext.createMediaStreamSource(e),this.createdNodes.microphone.connect(this.audioContext.destination)},handlePlayingUpdate(){const s=this.$refs.Noise.$refs.audioElement,a=this.$refs.Music.$refs.audioElement,t=this.audioContext,o=this.audioContext.destination;this.createdNodes.musicGain||=t.createGain(),this.createdNodes.noiseGain||=t.createGain(),this.createdNodes.noiseSource=t.createMediaElementSource(s),this.createdNodes.musicSource=t.createMediaElementSource(a),this.createdNodes.noiseSource.connect(this.createdNodes.noiseGain),this.createdNodes.musicSource.connect(this.createdNodes.musicGain),this.createdNodes.noiseGain.connect(o),this.createdNodes.musicGain.connect(o),a.muted=!1,s.muted=!1},updateNoiseGain(e){this.createdNodes.noiseGain.gain.linearRampToValueAtTime(e,this.createdNodes.noiseGain.context.currentTime+.3)},updateMusicGain(e){this.createdNodes.musicGain.gain.linearRampToValueAtTime(e,this.createdNodes.musicGain.context.currentTime+.3)}}},A=i("h1",null,"Test Version NoiseMusicGain: mit WebAudio & Gain, ohne Noise-Patch & ohne Music-Patch",-1),C=i("div",{class:"icon"},[i("img",{style:{width:"25px"},src:x})],-1),U=i("div",{class:"icon"},[i("img",{style:{width:"25px"},src:g})],-1);function y(e,s,c,a,t,o){const h=u("MicrophoneHandler"),r=u("AudioElement");return l(),p(f,null,[A,n(h,{ref:"Microphone","onUpdate:attach":o.setupMicrophone},null,8,["onUpdate:attach"]),n(r,{ref:"Noise",key:"5",src:t.noise_src,title:"Noise","onUpdate:volume":o.updateNoiseGain},{default:m(({})=>[C]),_:1},8,["src","onUpdate:volume"]),n(r,{ref:"Music",key:"1",src:t.forest_src,title:"Forest","onUpdate:volume":o.updateMusicGain,"onUpdate:playing":o.handlePlayingUpdate},{default:m(({})=>[U]),_:1},8,["src","onUpdate:volume","onUpdate:playing"])],64)}const S=_(E,[["render",y]]),B={__name:"NoiseMusicGainMic",setup(e){return(s,c)=>(l(),p("div",null,[n(S)]))}};export{B as default};
