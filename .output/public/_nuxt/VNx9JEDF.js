import{f as d,_ as h,r as p,o as m,c as l,b as a,w as u,F as _,a as i}from"./C2egFmNW.js";import{u as f,r as N}from"./C-QmXMO2.js";import{A as x}from"./lEC4QW_W.js";import{i as G}from"./DQqw_gti.js";import{_ as M}from"./evITL-mf.js";import{_ as g}from"./lXXSD6iP.js";import"./C4iS2aBk.js";const v={name:"MicNoisePatchMusic",components:{AudioElement:x},data(){return{audioContext:f().getContext(),playing:!1,paused:!1,createdNodes:{},noiseDevice:null,forest_src:window.location.origin+d().public.forest_src,noise_src:window.location.origin+d().public.noise_src}},beforeMount(){this.createNoiseDevice()},methods:{async createNoiseDevice(){if(!this.noiseDevice){const e=await G;this.noiseDevice=await N.createDevice({context:this.audioContext,patcher:e})}},async handlePlayingUpdate(){const o=(await this.$refs.Noise).$refs.audioElement,n=this.$refs.Music.$refs.audioElement,t=this.audioContext,s=this.audioContext.destination;this.createdNodes.musicGain||=t.createGain(),this.createdNodes.noiseGain||=t.createGain(),this.createdNodes.noiseSource=t.createMediaElementSource(o),this.createdNodes.musicSource=t.createMediaElementSource(n),this.createdNodes.noiseSource.connect(this.createdNodes.noiseGain),this.createdNodes.musicSource.connect(this.createdNodes.musicGain),this.createdNodes.noiseGain.connect(s),this.createdNodes.musicGain.connect(s),await this.createNoiseDevice(),n.muted=!1,o.muted=!1},updateNoiseGain(e){this.createdNodes.noiseGain.gain.linearRampToValueAtTime(e,this.createdNodes.noiseGain.context.currentTime+.3)},updateMusicGain(e){this.createdNodes.musicGain.gain.linearRampToValueAtTime(e,this.createdNodes.musicGain.context.currentTime+.3)}}},E=i("h1",null,"Clitching in audio",-1),w=i("h1",null,"Test Version Noise Patch Music: mit WebAudio, ohne Noise-Patch & ohne Music-Patch, aber Musik",-1),y=i("h2",null,"Currently Artifacts caused by the import of the RNBO Patch ",-1),A=i("div",{class:"icon"},[i("img",{style:{width:"25px"},src:M})],-1),C=i("div",{class:"icon"},[i("img",{style:{width:"25px"},src:g})],-1);function P(e,o,c,n,t,s){const r=p("AudioElement");return m(),l(_,null,[E,w,y,a(r,{ref:"Noise",key:"5",src:t.noise_src,title:"Noise","onUpdate:volume":s.updateNoiseGain},{default:u(({})=>[A]),_:1},8,["src","onUpdate:volume"]),a(r,{ref:"Music",key:"1",src:t.forest_src,title:"Forest","onUpdate:volume":s.updateMusicGain,"onUpdate:playing":s.handlePlayingUpdate},{default:u(({})=>[C]),_:1},8,["src","onUpdate:volume","onUpdate:playing"])],64)}const b=h(v,[["render",P]]),R={__name:"MicNoisePatchMusic2",setup(e){return(o,c)=>(m(),l("div",null,[a(b)]))}};export{R as default};
