import{A as v}from"./lEC4QW_W.js";import{i as m}from"./O97EOHsH.js";import{i as p}from"./DQqw_gti.js";import{c as f}from"./C-QmXMO2.js";import{_ as x,o as u,c as N,a as h,d as w,t as E,l as g,w as S,g as G,r as T,p as C,e as _}from"./C2egFmNW.js";import"./C4iS2aBk.js";const y={components:{AudioElement:v},data(){return{audioList:[{id:1,title:"Lagoon",src:window.location.origin+"/sounds/lagoon.m4a"},{id:2,title:"Forest",src:window.location.origin+"/sounds/forest.m4a"},{id:3,title:"Meadow",src:window.location.origin+"/sounds/meadow.m4a"},{id:4,title:"Tropics",src:window.location.origin+"/sounds/tropics.m4a"}],noise:{id:5,title:"Noise",src:window.location.origin+"/masking/noise.flac"},selectedAudioTitle:"",currentElement:{},createdNodes:{},musicPatch:m,noisePatch:p,audioContext:null,playState:!1}},computed:{selectedAudio(){return this.audioList.find(e=>e.title===this.selectedAudioTitle)||null},isPlaying(){return this.playState},checkContextCompatibility(){const e=Object.values(this.createdNodes),s=e.filter(c=>c.context!==this.audioContext);return e.length===e.length-s.length?!0:(this.handleIncompatibeError(s),!1)}},handleIncompatibeError(e){if(e&&e.pop().context!==this.createdNodes.musicSplitter.context){const c=this.createdNodes.musicSplitter.context;this.createdNodes.musicSource||=c.createMediaElementSource(musicAudioElement)}},beforeUnmount(){this.disconnectNodes(),this.audioContext&&this.audioContext.close(),this.audioContext=null},mounted(){this.audioContext=new AudioContext,this.selectAudioByTitle(this.audioList[0].title),this.addUserNavigationHandling(),this.musicPatch=m,this.noisePatch=p},methods:{changeNoiseVolume(e){this.createdNodes.noiseGain&&(this.createdNodes.noiseGain.gain.linearRampToValueAtTime(e,this.createdNodes.noiseGain.context.currentTime+.3),this.noiseGain=this.createdNodes.noiseGain.gain.value)},changeMusicVolume(e){this.createdNodes.musicGain&&(this.createdNodes.musicGain.gain.linearRampToValueAtTime(e,this.createdNodes.musicGain.context.currentTime+.3),this.musicGain=this.createdNodes.musicGain.gain.value)},addUserNavigationHandling(){"mediaSession"in navigator&&(navigator.mediaSession.setActionHandler("nexttrack",()=>{this.skip("next")}),navigator.mediaSession.setActionHandler("previoustrack",()=>{this.skip("previous")}))},getSong(e,s){let o=this.audioList.findIndex(t=>t.title===e)+(s==="next"?1:-1);return o>=this.audioList.length?o=0:o<0&&(o=this.audioList.length-1),this.audioList[o]},skip(e){const s=this.getSong(this.selectedAudioTitle,e);this.selectAudioByTitle(s.title)},updateCurrentElement(e){this.currentElement=this.audioList.find(s=>s.title===e)},selectAudioByTitle(e){this.selectedAudioTitle=e,this.currentElement=this.audioList[this.audioList.findIndex(s=>s.title===e)]},areAllNodesAvailable(){return["musicSource","musicSplitter","microphoneSource","musicDevice","outputSplitter","musicGain","noiseSource","noiseSplitter","noiseDevice","noiseGain","merger"].every(s=>this.createdNodes[s]!==void 0)},connectNodes(){const{musicSource:e,musicSplitter:s,microphoneSource:c,musicDevice:o,outputSplitter:t,musicGain:i,noiseSource:n,noiseSplitter:a,noiseDevice:d,noiseGain:r,merger:l}=this.createdNodes;e.connect(s),c.connect(o,0,0),s.connect(o,0,1),s.connect(o,1,2),o.connect(t),o.connect(i),n.connect(a),c.connect(d,0,0),a.connect(d,0,1),a.connect(d,1,2),t.connect(d,0,3),t.connect(d,1,4),d.connect(r),r.connect(l,0,0),r.connect(l,0,1),i.connect(l,0,2),i.connect(l,0,3),l.connect(l.context.destination)},handlePlayingUpdate(e){const s=window.AudioContext||window.webkitAudioContext||window.mozAudioContext||window.oAudioContext||window.msAudioContext,c=this.audioContext?this.audioContext:new s;let o=null;if(e)if(this.areAllNodesAvailable()){this.disconnectNodes();const t=this.$refs[this.currentElement.title].$refs.audioElement,i=this.createdNodes.musicGain.value,n=this.createdNodes.noiseGain.value;this.$refs[this.currentElement.title].$refs.audioElement.muted=!1,this.$refs.Noise.$refs.audioElement.muted=!1,this.createdNodes.musicSource=null,this.createdNodes.musicSource=c.createMediaElementSource(t),this.connectNodes(),i>0&&i<=1&&this.createdNodes.musicGain.gain.linearRampToValueAtTime(i||1,c.currentTime+2),n>0&&n<=1&&this.createdNodes.noiseGain.gain.linearRampToValueAtTime(n||1,c.currentTime+3)}else navigator.mediaDevices.getUserMedia({audio:{echoCancellation:!1,noiseSuppression:!1,autoGainControl:!1},video:!1}).then(t=>(o=this.audioContext.createMediaStreamSource(t),this.createdNodes.microphoneSource||=o,{audioContext:c,microphoneSource:o})).then(({audioContext:t,microphoneSource:i})=>f(t,this.noisePatch).then(n=>(this.createdNodes.noiseRNBODevice||=n,{audioContext:t,microphoneSource:i,noiseRNBODevice:n}))).then(({audioContext:t,microphoneSource:i,noiseRNBODevice:n})=>f(t,this.musicPatch).then(a=>(this.createdNodes.musicRNBODevice||=a,{audioContext:t,microphoneSource:i,noiseRNBODevice:n,musicRNBODevice:a}))).then(({audioContext:t,microphoneSource:i,noiseRNBODevice:n,musicRNBODevice:a})=>{const r=this.$refs[this.currentElement.title].$refs.audioElement;this.createdNodes||={},this.createdNodes.microphoneSource||=i,this.createdNodes.musicDevice||=a.node,this.createdNodes.noiseDevice||=n.node,this.createdNodes.noiseSource||=t.createMediaElementSource(this.$refs.Noise.$refs.audioElement),this.createdNodes.musicSource||=t.createMediaElementSource(r),this.createdNodes.musicSplitter||=t.createChannelSplitter(2),this.createdNodes.noiseSplitter||=t.createChannelSplitter(2),this.createdNodes.outputSplitter||=t.createChannelSplitter(2),this.createdNodes.musicGain||=t.createGain(),this.createdNodes.noiseGain||=t.createGain(),this.createdNodes.merger||=t.createChannelMerger(4),r.muted=!1,this.$refs.Noise.$refs.audioElement.muted=!1,this.createdNodes.musicGain.gain.value=1e-4,this.createdNodes.noiseGain.gain.value=1e-4,this.connectNodes(),setTimeout(()=>{this.playState=!0,this.createdNodes.musicGain.gain.exponentialRampToValueAtTime(1,t.currentTime+3),this.createdNodes.noiseGain.gain.exponentialRampToValueAtTime(1,t.currentTime+4)},150)}).catch(t=>{this.disconnectNodes(),this.audioContext&&this.audioContext.destination.disconnect(),this.$toast.error("Oouh sorry! Error while setting up audio, please reload.")});else{this.disconnectNodes();const t=new AudioContext;this.audioContext.close(),this.audioContext=t}},disconnectNodes(){typeof this.createdNodes=="object"&&this.createdNodes!==null&&(Object.values(this.createdNodes).forEach(e=>{e&&typeof e.disconnect=="function"&&e.disconnect(),e instanceof OscillatorNode&&e.stop()}),this.playState=!1)}}},A=e=>(C("data-v-2f8ab14d"),e=e(),_(),e),k=A(()=>h("h2",null,"FireFox: wait its loading: few seconds then the sound should start. You will hear the arifacts right after the music begins",-1)),b=A(()=>h("h2",null,"These file contain both patches, use Gainsliders of AudioElement to control volume and allow to skip. AudioStore used",-1)),V={class:"rnboplayer"},M={key:0};function U(e,s,c,o,t,i){const n=T("AudioElement");return u(),N("div",null,[k,b,h("div",V,[t.selectedAudioTitle?(u(),N("div",M,[w(E(i.selectedAudio.title)+" ",1),(u(),g(n,{ref:i.selectedAudio.title,key:i.selectedAudio.id,src:i.selectedAudio.src,title:i.selectedAudio.title,"onUpdate:playing":i.handlePlayingUpdate,"onUpdate:volume":i.changeMusicVolume},{default:S(({})=>[]),_:1},8,["src","title","onUpdate:playing","onUpdate:volume"]))])):G("",!0),(u(),g(n,{ref:t.noise.title,key:t.noise.id,src:t.noise.src,title:t.noise.title,"onUpdate:volume":i.changeNoiseVolume},{default:S(({})=>[]),_:1},8,["src","title","onUpdate:volume"])),h("button",{onClick:s[0]||(s[0]=(...a)=>i.skip&&i.skip(...a))}," Skip ")])])}const O=x(y,[["render",U],["__scopeId","data-v-2f8ab14d"]]);export{O as default};
