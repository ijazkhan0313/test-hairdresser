import{f as l,_ as h,o as c,c as d,b as p,w as f,g as u,r as g}from"./C2egFmNW.js";import{A as y}from"./lEC4QW_W.js";import{u as a}from"./C-QmXMO2.js";import{_ as N}from"./lXXSD6iP.js";const x={name:"MusicGainLagoon",components:{AudioElement:y},data(){return{audioContext:a().getContext(),createdNodes:{},musicReady:!1,lagoon_src:window.location.origin+l().public.lagoon_src,fading:!1,connected:!1,muted:!1}},beforeUnmount(){this.disconnectNodes()},methods:{disconnectNodes(){typeof this.createdNodes=="object"&&this.createdNodes!==null&&(Object.values(this.createdNodes).forEach(e=>{e&&(e.disconnect(),e=null)}),this.createdNodes=null)},toggleMute(){const t=this.$refs.Music.$refs.audioElement;t.muted=!t.muted,this.muted=t.muted},mute(){const t=this.$refs.Music.$refs.audioElement;t.muted=!0,this.muted=t.muted},unmute(){const t=this.$refs.Music.$refs.audioElement;t.muted=!1,this.muted=t.muted},refreshAudioContext(){const e=new AudioContext;this.audioContext.close(),a().audioContext=e,this.audioContext=a().getContext()},fadeInGains(){if(a().playing!==!0)return;const e=this.audioContext.currentTime+3;this.fading=!0,this.unmute();const t=this.createdNodes.musicGain;this.createdNodes.musicGain.gain.setValueAtTime(0,this.audioContext.currentTime),t.gain.linearRampToValueAtTime(1,e),setTimeout(()=>{this.fading=!1},e*1e3)},fadeOutGains(){if(this.createdNodes.musicGain){const e=this.createdNodes.musicGainValue.gain.value;this.createdNodes.musicGain.gain.linearRampToValueAtTime(e,this.audioContext.currentTime),this.createdNodes.musicGain.gain.linearRampToValueAtTime(0,this.audioContext.currentTime+1.3)}},handleCanPlayMusic(){this.musicReady=!0,this.handlePlayingUpdate(!0)},readyForWebaudio(){return!!this.musicReady},handlePlayingUpdate2(e){if(!e){this.mute();return}this.readyForWebaudio()?e?this.handlePlayingUpdate(e):this.fadeOutGains():this.readyForWebaudio()&&this.handlePlayingUpdate(e)},handlePlayingUpdate(e){if(e){const o=this.$refs.Music.$refs.audioElement,s=this.audioContext,i=this.audioContext.destination;this.createdNodes.musicGain||=s.createGain(),this.createdNodes.musicGain.gain.setValueAtTime(0,s.currentTime),o.currentSrc!==this.lagoon_src&&(this.createdNodes.musicSource.disconnect(),this.createdNodes.musicSource=s.createMediaElementSource(o),this.createdNodes.musicSource.connect(this.createdNodes.musicGain),this.createdNodes.musicGain.connect(i)),this.createdNodes.musicSource||=s.createMediaElementSource(o),this.createdNodes.musicSource.connect(this.createdNodes.musicGain),this.createdNodes.musicGain.connect(i),this.createdNodes.musicGain.gain.cancelScheduledValues(this.audioContext.currentTime),this.createdNodes.musicGain.gain.setValueAtTime(0,this.audioContext.currentTime),this.connected=!0,this.fadeInGains()}else this.fadeOutGains(),this.createdNodes=[],this.refreshAudioContext(),this.connected=!1},updateMusicGain(e){this.createdNodes.musicGain&&this.createdNodes.musicGain.gain.linearRampToValueAtTime(e,this.createdNodes.musicGain.context.currentTime+.3)}}},G="data:image/svg+xml,%3c?xml%20version='1.0'%20encoding='UTF-8'%20standalone='no'?%3e%3csvg%20viewBox='0%200%2024%2024'%20fill='none'%20version='1.1'%20id='svg1'%20sodipodi:docname='musicicon.svg'%20inkscape:version='1.3.2%20(091e20e,%202023-11-25)'%20xmlns:inkscape='http://www.inkscape.org/namespaces/inkscape'%20xmlns:sodipodi='http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd'%20xmlns='http://www.w3.org/2000/svg'%20xmlns:svg='http://www.w3.org/2000/svg'%3e%3cdefs%20id='defs1'%20/%3e%3csodipodi:namedview%20id='namedview1'%20pagecolor='%23ffffff'%20bordercolor='%23111111'%20borderopacity='1'%20inkscape:showpageshadow='0'%20inkscape:pageopacity='0'%20inkscape:pagecheckerboard='1'%20inkscape:deskcolor='%23d1d1d1'%20inkscape:zoom='9.8333333'%20inkscape:cx='11.949153'%20inkscape:cy='12'%20inkscape:window-width='1200'%20inkscape:window-height='853'%20inkscape:window-x='3447'%20inkscape:window-y='152'%20inkscape:window-maximized='0'%20inkscape:current-layer='SVGRepo_iconCarrier'%20/%3e%3cg%20id='SVGRepo_bgCarrier'%20stroke-width='0'%20/%3e%3cg%20id='SVGRepo_tracerCarrier'%20stroke-linecap='round'%20stroke-linejoin='round'%20/%3e%3cg%20id='SVGRepo_iconCarrier'%3e%3cpath%20d='m%209,19%20c%200,1.1046%20-1.34315,2%20-3,2%20-1.65685,0%20-3,-0.8954%20-3,-2%200,-1.1046%201.34315,-2%203,-2%201.65685,0%203,0.8954%203,2%20z%20m%200,0%20V%205%20L%2021,3%20v%2014%20m%200,0%20c%200,1.1046%20-1.3431,2%20-3,2%20-1.6569,0%20-3,-0.8954%20-3,-2%200,-1.1046%201.3431,-2%203,-2%201.6569,0%203,0.8954%203,2%20z%20M%209,9%2021,7'%20stroke='%23000000'%20stroke-width='0.744'%20stroke-linecap='round'%20stroke-linejoin='round'%20id='path1'%20sodipodi:nodetypes='sssssccccssssscc'%20/%3e%3cpath%20d='m%209,19%20c%200,1.1046%20-1.34315,2%20-3,2%20-1.65685,0%20-3,-0.8954%20-3,-2%200,-1.1046%201.34315,-2%203,-2%201.65685,0%203,0.8954%203,2%20z%20m%200,0%20V%205%20L%2021,3%20v%2014%20m%200,0%20c%200,1.1046%20-1.3431,2%20-3,2%20-1.6569,0%20-3,-0.8954%20-3,-2%200,-1.1046%201.3431,-2%203,-2%201.6569,0%203,0.8954%203,2%20z%20M%201.5762712,21.610169%20C%208.752223,15.835661%207.66429,15.289776%2023.440678,2.6271186'%20stroke='%23000000'%20stroke-width='0.744'%20stroke-linecap='round'%20stroke-linejoin='round'%20id='path2'%20sodipodi:nodetypes='sssssccccssssscc'%20style='stroke-width:1.044;stroke-dasharray:none'%20/%3e%3c/g%3e%3c/svg%3e",C={class:"player"};function k(e,t,o,s,i,n){const r=g("AudioElement");return c(),d("div",C,[p(r,{ref:"Music",key:"1",src:i.lagoon_src,title:"Lagoon","onUpdate:volume":n.updateMusicGain,"onUpdate:playing":n.handlePlayingUpdate2,"onUpdate:canplay":n.handleCanPlayMusic},{default:f(({})=>[i.muted?u("",!0):(c(),d("img",{key:0,style:{width:"25px"},src:N,title:"Click to mute",onClick:t[0]||(t[0]=m=>n.toggleMute())})),i.muted?(c(),d("img",{key:1,style:{width:"25px"},src:G,title:"Click to unmute",onClick:t[1]||(t[1]=m=>n.toggleMute())})):u("",!0)]),_:1},8,["src","onUpdate:volume","onUpdate:playing","onUpdate:canplay"])])}const V=h(x,[["render",k]]),w={name:"MusicGainForest",components:{AudioElement:y},data(){return{audioContext:a().getContext(),createdNodes:{},musicReady:!1,forest_src:window.location.origin+l().public.forest_src,fading:!1,connected:!1,muted:!1}},beforeUnmount(){this.disconnectNodes()},methods:{toggleMute(){const t=this.$refs.Music.$refs.audioElement;t.muted=!t.muted,this.muted=t.muted},disconnectNodes(){typeof this.createdNodes=="object"&&this.createdNodes!==null&&(Object.values(this.createdNodes).forEach(e=>{e&&(e.disconnect(),e=null)}),this.createdNodes=null,this.connected=!1)},mute(){const t=this.$refs.Music.$refs.audioElement;t.muted=!0,this.muted=t.muted},unmute(){const t=this.$refs.Music.$refs.audioElement;t.muted=!1,this.muted=t.muted},refreshAudioContext(){const e=new AudioContext;this.audioContext.close(),a().audioContext=e,this.audioContext=a().getContext()},fadeInGains(){if(a().playing!==!0)return;const e=this.audioContext.currentTime+3;this.fading=!0,this.unmute();const t=this.createdNodes.musicGain;this.createdNodes.musicGain.gain.setValueAtTime(0,this.audioContext.currentTime),t.gain.linearRampToValueAtTime(1,e),setTimeout(()=>{this.fading=!1},e*1e3)},fadeOutGains(){if(this.createdNodes.musicGain){const e=this.createdNodes.musicGainValue.gain.value;this.createdNodes.musicGain.gain.linearRampToValueAtTime(e,this.audioContext.currentTime),this.createdNodes.musicGain.gain.linearRampToValueAtTime(0,this.audioContext.currentTime+.4)}},handleCanPlayMusic(){this.musicReady=!0,this.handlePlayingUpdate(!0)},readyForWebaudio(){return!!this.musicReady},handlePlayingUpdate2(e){if(!e){this.mute();return}this.readyForWebaudio()?e?this.handlePlayingUpdate(e):this.fadeOutGains():this.readyForWebaudio()&&this.handlePlayingUpdate(e)},handlePlayingUpdate(e){if(e){const o=this.$refs.Music.$refs.audioElement,s=this.audioContext,i=this.audioContext.destination;this.createdNodes.musicGain||=s.createGain(),this.createdNodes.musicGain.gain.setValueAtTime(0,s.currentTime),o.currentSrc!==this.forest_src&&(this.createdNodes.musicSource.disconnect(),this.createdNodes.musicSource||=s.createMediaElementSource(o),this.createdNodes.musicSource.connect(this.createdNodes.musicGain),this.createdNodes.musicGain.connect(i)),this.createdNodes.musicSource||=s.createMediaElementSource(o),this.createdNodes.musicSource.connect(this.createdNodes.musicGain),this.createdNodes.musicGain.connect(i),this.createdNodes.musicGain.gain.cancelScheduledValues(this.audioContext.currentTime),this.createdNodes.musicGain.gain.setValueAtTime(0,this.audioContext.currentTime),this.connected=!0,this.fadeInGains(),a().playing=!0}else this.fadeOutGains(),this.createdNodes=[],this.refreshAudioContext(),this.connected=!1},updateMusicGain(e){this.createdNodes.musicGain&&this.createdNodes.musicGain.gain.linearRampToValueAtTime(e,this.createdNodes.musicGain.context.currentTime+.3)}}},T={class:"player"};function M(e,t,o,s,i,n){const r=g("AudioElement");return c(),d("div",T,[p(r,{ref:"Music",key:"1",src:i.forest_src,title:"Forest","onUpdate:volume":n.updateMusicGain,"onUpdate:playing":n.handlePlayingUpdate2,"onUpdate:canplay":n.handleCanPlayMusic},{default:f(({})=>[i.muted?u("",!0):(c(),d("img",{key:0,style:{width:"25px"},src:N,title:"Click to mute",onClick:t[0]||(t[0]=m=>n.toggleMute())})),i.muted?(c(),d("img",{key:1,style:{width:"25px"},src:G,title:"Click to unmute",onClick:t[1]||(t[1]=m=>n.toggleMute())})):u("",!0)]),_:1},8,["src","onUpdate:volume","onUpdate:playing","onUpdate:canplay"])])}const U=h(w,[["render",M]]);export{V as M,G as _,U as a};
