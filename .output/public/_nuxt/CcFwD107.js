import{i as _,B as V,y as w,C as M,D as U,_ as A,o as l,c,E as R,a as u,s as b,v as k,q as D,f as T,r as I,t as y,b as N,w as x,F as L}from"./C2egFmNW.js";import{s as K}from"./lij41l4B.js";import{u as m}from"./C-QmXMO2.js";import{_ as O}from"./evITL-mf.js";import{_ as W}from"./lXXSD6iP.js";import"./C4iS2aBk.js";const H={name:"AudioElement",props:{src:{type:String,required:!0},title:{type:String,default:"Unknown"}},emits:["update:volume","update:loaded","update:playing","update:fadeout"],setup(t,{emit:e}){const s=m(),i=_(null),a=_(1),d=()=>{try{i.value?.play(),i.value&&(i.value.muted=!0)}catch{}},n=()=>{i.value?.pause()},h=()=>{e("update:fadeout"),setTimeout(()=>{n()},2e3)},S=()=>s.playing;V(()=>{if(t.title!=="Noise"){if("mediaSession"in navigator){const o=window.location.origin+"/images/scenery/"+t.title.toLowerCase()+".jpg";navigator.mediaSession.metadata=new MediaMetadata({title:t.title,artist:"Mindboost",artwork:[{src:o,sizes:"192x192",type:"image/jpeg"}]})}}}),w(()=>s.playing,o=>{o?d():h()}),w(()=>a.value,o=>{i.value&&e("update:volume",o)});const C=o=>{if(o.deltaY<0){const r=Math.min(1,a.value+.02);a.value=r}else{const r=Math.max(0,a.value-.02);a.value=r}};let p=!0;const E=((o,v=1500)=>{let r;return()=>{r&&clearTimeout(r),r=setTimeout(()=>{o.apply(this)},v)}})(()=>{p=!0}),f=o=>{p&&o.code==="Space"&&(o.preventDefault(),s.playing?G():g(),p=!1,E())},g=()=>{e("update:playing",!0),s.setPlaying(!0)},G=()=>{e("update:playing",!1),s.playing=!1},P=()=>{e("update:loaded",!0)};return M(()=>{i.value&&(i.value.src=t.src,t.title!=="Noise"&&(window.addEventListener("keydown",f.bind(this)),"mediaSession"in navigator&&(navigator.mediaSession.setActionHandler("play",o=>{g()}),navigator.mediaSession.setActionHandler("stop",o=>{}),navigator.mediaSession.setActionHandler("pause",o=>{G()}))))}),U(()=>{window.removeEventListener("keydown",f.bind(this))}),{audioElement:i,play:d,pause:n,isPlaying:S,handlePlay:g,handlePause:G,handleLoaded:P,handleKeyDown:f,volume:a,changeVolumeOnWheel:C}}},B={class:"slider"};function F(t,e,s,i,a,d){return l(),c("div",null,[R(t.$slots,"default",{},void 0,!0),u("div",B,[b(u("input",{id:"gain-control","onUpdate:modelValue":e[0]||(e[0]=n=>i.volume=n),type:"range",min:"0",max:"1",step:"0.02",onWheel:e[1]||(e[1]=D((...n)=>i.changeVolumeOnWheel&&i.changeVolumeOnWheel(...n),["prevent"]))},null,544),[[k,i.volume]])]),u("audio",{ref:"audioElement",hidden:"",autoplay:"",muted:"",loop:"",onPlay:e[2]||(e[2]=(...n)=>i.handlePlay&&i.handlePlay(...n)),onPause:e[3]||(e[3]=(...n)=>i.handlePause&&i.handlePause(...n)),onKeydown:e[4]||(e[4]=(...n)=>i.handleKeyDown&&i.handleKeyDown(...n)),onLoadedmetadata:e[5]||(e[5]=(...n)=>i.handleLoaded&&i.handleLoaded(...n))},null,544)])}const Y=A(H,[["render",F],["__scopeId","data-v-3a2106ea"]]),j={name:"NoiseMusicGain",components:{AudioElement:Y},data(){return{audioContext:m().getContext(),playing:!1,paused:!1,createdNodes:{},fading:!1,noiseReady:!1,musicReady:!1,musicGain:0,noiseGain:0,forest_src:window.location.origin+T().public.forest_src,noise_src:window.location.origin+T().public.noise_src}},mounted(){this.monitorGainNodes()},methods:{monitorGainNodes(){K(()=>{this.createdNodes.musicGain&&(this.musicGain=this.createdNodes.musicGain.gain.value),this.createdNodes.noiseGain&&(this.noiseGain=this.createdNodes.noiseGain.gain.value)},100)},refreshAudioContext(){const t=new AudioContext;this.audioContext.close(),m().audioContext=t,this.audioContext=m().getContext()},fadeOutGains(){const e=this.audioContext.currentTime,s=e+2;this.fading=!0,this.createdNodes.noiseGain&&(this.createdNodes.noiseGain.gain.cancelScheduledValues(e),this.createdNodes.noiseGain.gain.setValueAtTime(this.createdNodes.noiseGain.gain.value,e),this.createdNodes.noiseGain.gain.linearRampToValueAtTime(0,s),this.noiseGain=0),this.createdNodes.musicGain&&(this.createdNodes.musicGain.gain.cancelScheduledValues(e),this.createdNodes.musicGain.gain.setValueAtTime(this.createdNodes.musicGain.gain.value,e),this.createdNodes.musicGain.gain.linearRampToValueAtTime(0,s),this.playing=!1),setTimeout(()=>{this.fading=!1},2*1e3)},fadeInGains(){const t=this.audioContext.currentTime+6;this.fading=!0;const e=this.createdNodes.noiseGain,s=this.createdNodes.musicGain;this.createdNodes.noiseSource.muted=!1,this.createdNodes.musicSource.muted=!1,e.gain.linearRampToValueAtTime(1,t),s.gain.linearRampToValueAtTime(1,t),this.noiseGain=e.gain.value,this.musicGain=s.gain.value,this.playing=!0,setTimeout(()=>{this.fading=!1},t*1e3)},handlePlayingUpdate(t){if(!(!this.musicReady&&!this.noiseReady))if(t&&m().isPlaying()){const s=this.$refs.Noise.$refs.audioElement,a=this.$refs.Music.$refs.audioElement,d=this.audioContext,n=this.audioContext.destination;this.createdNodes.musicGain||=d.createGain(),this.createdNodes.noiseGain||=d.createGain(),this.createdNodes.musicGain.gain.setValueAtTime(0,d.currentTime),this.createdNodes.noiseGain.gain.setValueAtTime(0,d.currentTime),a.muted=!1,s.muted=!1,a.volume=1,s.volume=1,this.createdNodes.noiseSource=d.createMediaElementSource(s),this.createdNodes.musicSource=d.createMediaElementSource(a),this.createdNodes.noiseSource.connect(this.createdNodes.noiseGain),this.createdNodes.musicSource.connect(this.createdNodes.musicGain),this.createdNodes.noiseGain.connect(n),this.createdNodes.musicGain.connect(n),this.fadeInGains()}else this.fading&&this.createdNodes.noiseGain&&this.createdNodes.musicGain&&(this.createdNodes.noiseGain.gain.cancelScheduledValues(this.createdNodes.noiseGain.currentTime),this.createdNodes.musicGain.gain.cancelScheduledValues(this.createdNodes.musicGain.currentTime)),setTimeout(()=>{this.playing=!1,this.createdNodes=[],this.refreshAudioContext()},2e3)},updateNoiseGain(t){this.createdNodes.noiseGain&&(this.createdNodes.noiseGain.gain.linearRampToValueAtTime(t,this.createdNodes.noiseGain.context.currentTime+.3),this.noiseGain=this.createdNodes.noiseGain.gain.value)},updateMusicGain(t){this.createdNodes.musicGain&&(this.createdNodes.musicGain.gain.linearRampToValueAtTime(t,this.createdNodes.musicGain.context.currentTime+.3),this.musicGain=this.createdNodes.musicGain.gain.value)}}},q=u("h1",null,"Test Version NoiseMusicGain: mit WebAudio & Gain und PlayPause, ohne Noise-Patch & ohne Music-Patch",-1),z=u("p",null," The method refreshAudioContext helps to get the ressources free when we stop playing the audio // without it would be louder each time we start playing ",-1),J=u("p",null," Whenever I view this page the audio starts playing, when I hit 'space' it fades out within 2seconds when i start playing again nothing happens... I would expect playing. ",-1),Q={key:0},X={key:1},Z={key:2},$={key:3},ee=u("div",{class:"icon"},[u("img",{style:{width:"25px"},src:O})],-1),ie=u("div",{class:"icon"},[u("img",{style:{width:"25px"},src:W})],-1);function te(t,e,s,i,a,d){const n=I("AudioElement");return l(),c(L,null,[q,u("h2",null,"Play State: "+y(a.playing),1),z,J,a.createdNodes.musicGain?(l(),c("div",Q,y(a.musicGain),1)):(l(),c("div",X," No MusicGain ")),a.createdNodes.noiseGain?(l(),c("div",Z,y(a.noiseGain),1)):(l(),c("div",$," No noiseGain ")),N(n,{ref:"Noise",key:"5",src:a.noise_src,title:"Noise","onUpdate:volume":d.updateNoiseGain,"onUpdate:loaded":e[0]||(e[0]=h=>a.noiseReady=!0)},{default:x(({})=>[ee]),_:1},8,["src","onUpdate:volume"]),N(n,{ref:"Music",key:"1",src:a.forest_src,title:"Forest","onUpdate:volume":d.updateMusicGain,"onUpdate:playing":d.handlePlayingUpdate,"onUpdate:fadeout":d.fadeOutGains,"onUpdate:loaded":e[1]||(e[1]=h=>a.musicReady=!0)},{default:x(({})=>[ie]),_:1},8,["src","onUpdate:volume","onUpdate:playing","onUpdate:fadeout"])],64)}const ae=A(j,[["render",te]]),ce={__name:"NoiseMusicGainPlayPause",setup(t){return(e,s)=>(l(),c("div",null,[N(ae)]))}};export{ce as default};
